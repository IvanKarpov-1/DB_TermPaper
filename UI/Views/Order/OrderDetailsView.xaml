<UserControl x:Class="UI.Views.Order.OrderDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:UI.Converters"
             xmlns:controls="clr-namespace:UI.Controls"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="25"
             mc:Ignorable="d" 
             d:DesignHeight="656" d:DesignWidth="1280">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary>
                    <Style TargetType="{x:Type ComboBox}"
                           BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="IsHitTestVisible" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                <Setter Property="IsReadOnly" Value="False"/>
                                <Setter Property="IsHitTestVisible" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

                <ResourceDictionary>
                    <Style TargetType="{x:Type DatePicker}"
                           BasedOn="{StaticResource MaterialDesignDatePicker}">
                        <Setter Property="Language" Value="uk-UA"/>
                        <Setter Property="Margin" Value="10, 0"/>
                        <Setter Property="IsHitTestVisible" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                <Setter Property="IsHitTestVisible" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

                <ResourceDictionary>
                    <converters:DateOnlyConverter x:Key="DateOnlyConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="15">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <FrameworkElement Grid.Row="2"
                          x:Name="DataContextProxy"
                          DataContext="{Binding}" />

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Text="Дата замовлення"
                               HorizontalAlignment="Right"/>

                    <DatePicker Grid.Column="1"
                                SelectedDate="{Binding Order.OrderDate, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateOnlyConverter}}"/>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Text="Дата доставки"
                               HorizontalAlignment="Right"/>

                    <DatePicker Grid.Column="1"
                                SelectedDate="{Binding Order.DeliveryDate, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateOnlyConverter}}"/>
                </Grid>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                       Text="Адреса"
                       Margin="50, 25, 30, 0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right"/>

                <ComboBox Grid.Column="1"
                      materialDesign:HintAssist.Hint="Адреса клієнта"
                      materialDesign:HintAssist.HintOpacity=".26"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      IsEditable="True"
                      HorizontalAlignment="Stretch" 
                      Width="Auto"
                      ItemsSource="{Binding Addresses}"
                      SelectedItem="{Binding SelectedAddress}"
                      DisplayMemberPath="AddressString"/>

            </Grid>

            <DataGrid Grid.Row="2"
                  CanUserAddRows="False"
                  SelectionMode="Extended"
                  SelectionUnit="FullRow" 
                  AutoGenerateColumns="False"
                  HeadersVisibility="All"
                  ItemsSource="{Binding OrderDetails}"
                  Margin="10">
                <DataGrid.Columns>

                    <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Transparent">
                                <CheckBox IsChecked="{Binding DataContext.IsAllItemsSelected, Source={x:Reference DataContextProxy}}"/>
                            </Border>
                        </DataGridCheckBoxColumn.Header>

                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}"
                               BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn Binding="{Binding Id}" 
                                    Header="Id"
                                    IsReadOnly="True"/>

                    <DataGridTemplateColumn Header="Назва">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                <Hyperlink Command="{Binding DataContext.NavigateToProductDetailsCommand, Source={x:Reference DataContextProxy}}"
                                           CommandParameter="{Binding Id}">
                                    <TextBlock Text="{Binding Name}"/>
                                </Hyperlink>
                            </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Model}" 
                                    Header="Модель"
                                    IsReadOnly="True"/>

                    <DataGridTextColumn Binding="{Binding Code}" 
                                    Header="Код"
                                    IsReadOnly="True"/>

                    <DataGridTextColumn Binding="{Binding YearOfLaunch}" 
                                    Header="Рік запуску у виробництво"
                                    IsReadOnly="True"/>

                    <DataGridTextColumn Binding="{Binding NumberPerYear}" 
                                    Header="Кількість за рік"
                                    IsReadOnly="True"/>

                    <DataGridTextColumn Binding="{Binding SellingPrice}" 
                                    Header="Відпускна ціна"
                                    IsReadOnly="True"/>

                    <DataGridTextColumn Binding="{Binding Quantity}" 
                                    Header="Кількість"
                                    IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>

            <controls:PositiveNegativeButtonsControl Grid.Row="3"
                                                     Grid.Column="0"
                                                     HasErrors="{Binding Order.HasErrors, UpdateSourceTrigger=PropertyChanged}">
                <controls:PositiveNegativeButtonsControl.Style>
                    <Style TargetType="{x:Type controls:PositiveNegativeButtonsControl}">
                        <Setter Property="ContentOfPositiveButton" Value="Редагувати"/>
                        <Setter Property="ContentOfNegativeButton" Value="Видалити"/>
                        <Setter Property="CommandOfPositiveButton" Value="{Binding EditCommand}"/>
                        <Setter Property="CommandOfNegativeButton" Value="{Binding DeleteCommand}"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                <Setter Property="ContentOfPositiveButton" Value="Зберегти"/>
                                <Setter Property="ContentOfNegativeButton" Value="Скасувати"/>
                                <Setter Property="CommandOfPositiveButton" Value="{Binding SaveCommand}"/>
                                <Setter Property="CommandOfNegativeButton" Value="{Binding CancelCommand}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:PositiveNegativeButtonsControl.Style>
            </controls:PositiveNegativeButtonsControl>
        </Grid>

        <materialDesign:ColorZone HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ProgressBar IsIndeterminate="True"
                         Value="0"
                         Style="{StaticResource MaterialDesignCircularProgressBar}"/>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>
